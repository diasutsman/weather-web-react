{"version":3,"sources":["components/WeatherCard.js","components/SearchBar.js","data/WeatherApiService.js","components/BootstrapProgressBar.js","components/ErrorComponent.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","props","weather","unit","units","react_default","a","createElement","className","name","main","temp","feels_like","temp_max","temp_min","style","color","src","concat","icon","alt","width","SearchBar","_useState","useState","_useState2","Object","slicedToArray","cityName","setCityName","_useState3","_useState4","setUnits","lat","lon","_submitHandler","asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","wrap","_context","prev","next","preventDefault","getWeatherByLocation","stop","apply","this","arguments","radioChangeHandler","_x2","_radioChangeHandler","_callee2","_context2","target","value","Fragment","id","onSubmit","_x","type","placeholder","aria-label","aria-describedby","autoComplete","required","onChange","e","defaultChecked","onClick","htmlFor","WeatherApiService","_ref","fetch","process","then","res","ok","Error","json","data","BootstrapProgressBar","role","ErrorComponent","error","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","document","title","navigator","geolocation","getCurrentPosition","App_regeneratorRuntime","position","_position$coords","coords","latitude","longitude","setState","sent","queryObj","console","log","t0","message","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.d8d1a447.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function WeatherCard(props) {\n    const { weather } = props\n    const unit = props.units === 'metric'? ' °C' : ' °F'\n    return (\n        <div className=\"card shadow-0 border mb-3\">\n            <div className=\"card-body p-4\">\n\n                <h4 className=\"mb-1 sfw-normal\">{weather.name}</h4>\n                <p className=\"mb-2\">Current temperature: <strong>{weather.main.temp + unit}</strong></p>\n                <p>Feels like: <strong>{weather.main.feels_like + unit}</strong></p>\n                <p>Max: <strong>{weather.main.temp_max + unit}</strong>, Min: <strong>{weather.main.temp_min + unit}</strong></p>\n\n                <div className=\"d-flex flex-row align-items-center\">\n                    <p className=\"mb-0 me-4\">{weather.weather[0].main}</p>\n                    <i className=\"fas fa-cloud fa-3 x\" style={{ color: '#eee' }}>\n                        <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`} alt=\"\" width=\"100px\" />\n                    </i>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React, { useState } from \"react\";\r\n\r\nexport default function SearchBar(props) {\r\n\r\n    const [cityName, setCityName] = useState(\"\");\r\n    const [units, setUnits] = useState('metric')\r\n    const {lat, lon} = props\r\n\r\n    /**\r\n     * \r\n     * @param {SubmitEvent} ev \r\n     */\r\n\r\n    async function submitHandler(ev) {\r\n        ev.preventDefault()\r\n        props.getWeatherByLocation({cityName, lat, lon}, units)\r\n    }\r\n\r\n    async function radioChangeHandler (ev) {\r\n        setUnits(() => {\r\n          props.getWeatherByLocation({cityName, lat, lon}, ev.target.value)\r\n          return ev.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form id=\"city-form\" onSubmit={submitHandler}>\r\n                <div className=\"input-group rounded mb-3\">\r\n                    <input type=\"search\" className=\"form-control rounded\" id=\"input-city\" placeholder=\"City\"\r\n                        aria-label=\"Search\" aria-describedby=\"search-addon\" autoComplete=\"off\" required value={cityName} onChange={(e) => setCityName(e.target.value)} />\r\n                    <input type=\"submit\" className=\"input-group-text border-0 fw-bold\" id=\"search-btn\"\r\n                        value=\"Check!\" />\r\n                </div>\r\n            </form>\r\n            <div className=\"mb-4 pb-2\">\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input celcius\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                        id=\"inlineRadio1\" value=\"metric\" defaultChecked onClick={radioChangeHandler} />\r\n                    <label className=\"form-check-label\" htmlFor='inlineRadio1'>Celsius</label>\r\n                </div>\r\n\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input farenheit\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                        id=\"inlineRadio2\" value=\"imperial\" onClick={radioChangeHandler}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Farenheit</label>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","// for weather icon: http://openweathermap.org/img/wn/{weatherCode}@2x.png\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY\r\n\r\nexport default class WeatherApiService {\r\n\r\n    static getWeatherByLocation({cityName, lat, lon}, units) {\r\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}&${cityName? `q=${cityName}` : `lat=${lat}&lon=${lon}`}&units=${units}`)\r\n            .then(res => {\r\n              if(!res.ok) throw new Error(`\"${cityName}\" is not found`)\r\n              return res.json()\r\n            })\r\n            .then(data => data)\r\n    }\r\n}","import React from \"react\"\n\nexport default function BootstrapProgressBar() {\n    return (\n        <div className=\"cards-container d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\"></span>\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nexport default function ErrorComponent({ error }) {\n    return (\n        <div className=\"card shadow-0 border mb-3\">\n            <div className=\"card-body p-4\">\n\n                <h4 className=\"mb-1 sfw-normal\">{error}</h4>\n\n            </div>\n        </div>\n    )\n}","import './App.css';\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport WeatherCard from './components/WeatherCard';\r\nimport SearchBar from './components/SearchBar';\r\nimport WeatherApiService from './data/WeatherApiService';\r\nimport BootstrapProgressBar from './components/BootstrapProgressBar';\r\nimport ErrorComponent from './components/ErrorComponent';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      weather: null,\r\n      units: 'metric',\r\n      lat: null,\r\n      lon: null\r\n    }\r\n    this.getWeatherByLocation = this.getWeatherByLocation.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'Weather Web';\r\n    navigator.geolocation.getCurrentPosition(async position => {\r\n      const { latitude: lat, longitude: lon } = position.coords\r\n      this.setState({\r\n        lat,\r\n        lon\r\n      })\r\n      const weather = await WeatherApiService.getWeatherByLocation({ lat, lon }, this.state.units)\r\n      this.setState({\r\n        weather\r\n      })\r\n    })\r\n  }\r\n\r\n  async getWeatherByLocation(queryObj, units) {\r\n    this.setState({\r\n      weather: null\r\n    })\r\n    try {\r\n      const weather = await WeatherApiService.getWeatherByLocation(queryObj, units)\r\n      this.setState({\r\n        weather,\r\n        units\r\n      })\r\n      console.log({weather})\r\n    } catch (e) {\r\n      this.setState({\r\n        weather: e.message,\r\n        units\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <section className=\"vh-100\">\r\n          <div className=\"container py-5 h-100\">\r\n\r\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n\r\n              <div className=\"col-md-8 col-lg-6 col-xl-4\">\r\n\r\n                <h3 className=\"mb-4 pb-2 fw-normal\">Check the weather forecast</h3>\r\n\r\n                <SearchBar getWeatherByLocation={this.getWeatherByLocation} lat={this.state.lat} lon={this.state.lon} />\r\n\r\n                {\r\n                  this.state.weather instanceof Object ?\r\n                    <WeatherCard\r\n                      weather={this.state.weather}\r\n                      units={this.state.units} /> :\r\n                    typeof this.state.weather === 'string' ?\r\n                      <ErrorComponent error={this.state.weather} /> :\r\n                      <BootstrapProgressBar />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </section >\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}